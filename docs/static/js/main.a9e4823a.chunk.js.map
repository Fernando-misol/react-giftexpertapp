{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cast","alert","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_large","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","divRoor","document","querySelector","ReactDOM","render"],"mappings":"oMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,sBAAMC,SAbS,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,GACxBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,KAGdO,MAAM,uBAMV,SACI,uBACIC,KAAK,OACLC,MAAOV,EACPW,SArBY,SAACR,GACrBF,EAAcE,EAAES,OAAOF,a,sCCJlBG,EAAO,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DACXC,EADW,iDACmCC,UAAUH,GAD7C,+DAECI,MAAMF,GAFP,cAEXG,EAFW,gBAGMA,EAAKC,OAHX,uBAGTC,EAHS,EAGTA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,gBAAgBZ,QATxB,kBAYVM,GAZU,4CAAD,sDCDPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OACI,sBAAKc,UAAU,2DAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECFwB,SAACA,GAEzB,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAuBA,OAlBAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAK,SAAAC,GAEFC,YAAW,WAEPJ,EAAS,CACLf,KAAKkB,EACLL,SAAQ,MAGb,UAIb,CAACpB,IAEIqB,EDvBuBM,CAAa3B,GAA/Ba,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAEnB,OACI,qCACI,oBAAIJ,UAAU,sDAAd,SAAqEhB,IAEpEoB,GAAW,mBAAGJ,UAAU,mDAAb,uBAEZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEUA,GADDA,EAAIC,aEStBiB,EAvBI,WAEf,MAAoC3C,mBAAS,CAAC,UAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ6C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADNA,YCZ3B8B,G,MAAQC,SAASC,cAAc,SAErCC,IAASC,OAAO,cAAC,EAAD,IAAgBJ,K","file":"static/js/main.a9e4823a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setinputValue] = useState('');\r\n    \r\n    const handleImputChange=(e)=>{\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            setCategories(cast => [inputValue,...cast]);\r\n            setinputValue('');\r\n        }\r\n        else{\r\n            alert('El campo eta vacio');\r\n        }\r\n\r\n    }\r\n\r\n    return (        \r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleImputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n}","\r\n\r\n\r\nexport const getGifs=async(category )=>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=sCuC6iCOT53Oc1Mp98BS7uOenoba0aFm`\r\n    const resp= await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_large.url\r\n        }\r\n    })\r\n    return gifs;\r\n\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__bounceIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => { \r\n    \r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounce animate__bounceIn\">{category}</h3>\r\n            \r\n            {loading && <p className=\"animate__animated animate__bounce animate__flash\" >Loading..</p>}\r\n            \r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            { ... img }\r\n                        />\r\n                    ))\r\n                }    \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n    \r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then(imgs=>{\r\n\r\n                setTimeout(() => {\r\n                    \r\n                    setState({\r\n                        data:imgs,\r\n                        loading:false\r\n                    });\r\n                    \r\n                }, 3000);\r\n\r\n            })\r\n    \r\n    },[category])\r\n\r\n    return state;//data\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp=()=>{\r\n\r\n    const [categories, setCategories] = useState(['Sherk']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>           \r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                        <GifGrid \r\n                            key={category} \r\n                            category={ category }\r\n                        />)\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nconst divRoor=document.querySelector('#app');\n\nReactDOM.render(<GifExpertApp/>,divRoor);// reactDom.render(<CounterApp value={123} /> , divRoor);"],"sourceRoot":""}